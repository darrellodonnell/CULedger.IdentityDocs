{
	"info": {
		"_postman_id": "6516c9c2-9701-4dbf-93eb-26dadcdd9e81",
		"name": "CULedger.Identity API",
		"description": "# CULedger.Identity API\n\nThis is the base Identity API for CULedger's MyCUID platform. \n \n It is focused on the Identity portions of CULedger, which will be used by multiple stakeholders in the CULedger ecosystem. It maps Members (by memberId) to the private DID Pairs that establish a privacy-respecting, secure connection between a Member and a financial institution. The machinations of Sovrin communications and credential assembly and proofing are handled internally to the CULedger Identity API.\n \n During the **Onboard()** process the following happens\n \n * A secure Connection is established with the Member - and each end of the connection has a unique decentralized identifier (DID), which include a public and private keypair. This private \"pairwise\" connection is unique at both ends of the connection - at the FI and at the User. All communications travel across this authenticated connection once it has been established.\n \n * Once the connection is made, a MyCUID Credential is Issued and sent to the Member. The Member's digital wallet (e.g. Connect.Me) has the ability to digital prove that they control the device and still hold this MyCUID Credential later as their DID is tied to a link secret that is stored in the secure enclave/trusted execution environment of their smartphone. \n \n v0.3.0 adds multiple message related capabilities:\n \n * More control over message displayed to Member when asking them to Authenticate themselves. The addition of ./authenticateSimple()\n \n * Ability to ask a member a yes/no question and receive the resulting, digitally-signed (by their private DID) response by the Member.\n \n\n \n v0.2.0 added polling in for support of the long-running commands - both .Onboard() and .Authenticate() tend to take seconds or even more than a minute, not sub-second. Both depend on user actions at the remote end so can range heavily.\n \n Overall, the CULedger.Identity API is intended to do only 2 things outside of configuration and monitoring. \n \n1. Allow a single function call to Onboard a Member - which contacts the member (via SMS or email), gets Connect.Me installed, and sends down a credential from the CU.\n \n2. Allow a single function call to later Authenticate a Member that holds the credential that was issued to them. \n \n The API is Member-centric - it is all about linking a CU Member to a credential. \n \n NOTE the API will evolve to add more capability. This initial API is intentionally limited. The team will make an effort to avoid adding complexity unless it is fully warranted.\n\n\nContact Support: \n{\n\nName : undefined\n\nEmail : darrell.odonnell@culedger.com\n\n}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "member",
			"item": [
				{
					"name": "{member Id}",
					"item": [
						{
							"name": "Get Member for memberId.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/member/:memberId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "memberId that will be returned"
										}
									]
								},
								"description": "Returns Member with memberId."
							},
							"response": [
								{
									"name": "Member information stored in CULedger.Identity",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/member/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"memberId\": \"<string>\",\n \"memberStatus\": \"<string>\",\n \"lastContact\": \"<dateTime>\"\n}"
								}
							]
						},
						{
							"name": "Delete Member for memberId.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/member/:memberId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "memberId that will be deleted. WARNING Deletion is permanent."
										}
									]
								},
								"description": "Deletes Member with memberId from CULedger.Identity System."
							},
							"response": [
								{
									"name": "unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/member/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "record for memberId deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/member/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Authenticates that Member has control of valid Verifiable Credential.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Prefer",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member/:memberId/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId",
										"authenticate"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "Provide memberId that will be authenticated."
										}
									]
								},
								"description": "Authenticates Member by requesting a Proof generated with their DID and the MyCUID.Basic credential."
							},
							"response": [
								{
									"name": "Call was made asynchronously. This is the result of posting the job for processing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/member/<string>/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"authenticate"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
								},
								{
									"name": "Result of authentication - returned when synchronous process completes.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/member/<string>/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"authenticate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"memberId\": \"<string>\",\n \"memberAuthenticationStatus\": \"<string>\",\n \"credentialID\": \"<string>\",\n \"messageResponse\": {\n  \"messageId\": \"<string>\",\n  \"MOREHERE\": \"<string>\",\n  \"simpleResponse\": \"<string>\",\n  \"messagePrompt\": {\n   \"messageId\": \"<string>\",\n   \"messageQuestion\": \"<string>\",\n   \"positiveOptionText\": \"<string>\",\n   \"negativeOptionText\": \"<string>\",\n   \"messageText\": \"<string>\",\n   \"expires\": \"<dateTime>\"\n  },\n  \"signedResponse\": \"<string>\"\n }\n}"
								}
							]
						},
						{
							"name": "Authenticates Member by connecting and prompting them to answer a question.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Prefer",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/member/:memberId/authenticateSimple",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId",
										"authenticateSimple"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "Provide memberId that will be authenticated."
										}
									]
								},
								"description": "Authenticates Member by prompting them to answer a challenge.\n"
							},
							"response": [
								{
									"name": "Call was made asynchronously. This is the result of posting the job for processing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/authenticateSimple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"authenticateSimple"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
								},
								{
									"name": "Result of authentication - returned when synchronous process completes.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/authenticateSimple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"authenticateSimple"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"memberId\": \"<string>\",\n \"memberAuthenticationStatus\": \"<string>\",\n \"credentialID\": \"<string>\",\n \"messageResponse\": {\n  \"messageId\": \"<string>\",\n  \"MOREHERE\": \"<string>\",\n  \"simpleResponse\": \"<string>\",\n  \"messagePrompt\": {\n   \"messageId\": \"<string>\",\n   \"messageQuestion\": \"<string>\",\n   \"positiveOptionText\": \"<string>\",\n   \"negativeOptionText\": \"<string>\",\n   \"messageText\": \"<string>\",\n   \"expires\": \"<dateTime>\"\n  },\n  \"signedResponse\": \"<string>\"\n }\n}"
								}
							]
						},
						{
							"name": "Connects to Member and sends Credential to them. ",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Prefer",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"displayTextFromFI\": \"<string>\",\n    \"credentialData\": {\n        \"CredentialId\": \"<string>\",\n        \"Institution\": \"<string>\",\n        \"CredentialName\": \"<string>\",\n        \"CredentialDescription\": \"<string>\",\n        \"MemberNumber\": \"<string>\",\n        \"MemberSince\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/member/:memberId/onboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId",
										"onboard"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "1234",
											"description": "Member (identitified by memberID) that we are onboarding."
										}
									]
								},
								"description": "Establishes private pairwise connection with Member and sends MyCUID.Basis credential to Member.\n\n* Invites Member to download Connect.Me\n* Establishes a private pairwise connection (private DID for CU and private DID for Member).\n* Creates Credential that is signed with Issuer (CU) private key and Member's public key (this public key is part of the private DID, which is NOT stored on ledger).\n* Sends MyCUID.Basic credential to member to be held in their digital wallet (Connect.Me)\n"
							},
							"response": [
								{
									"name": "JSON results from onboarding member.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"memberId\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"displayTextFromFI\": \"<string>\",\n    \"credentialData\": {\n        \"CredentialId\": \"<string>\",\n        \"Institution\": \"<string>\",\n        \"CredentialName\": \"<string>\",\n        \"CredentialDescription\": \"<string>\",\n        \"MemberNumber\": \"<string>\",\n        \"MemberSince\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/onboard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"onboard"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"memberId\": \"<string>\",\n \"memberStatus\": \"<string>\",\n \"lastContact\": \"<dateTime>\"\n}"
								},
								{
									"name": "Call was made Asynchronously. This is the result of posting the job for processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"memberId\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"displayTextFromFI\": \"<string>\",\n    \"credentialData\": {\n        \"CredentialId\": \"<string>\",\n        \"Institution\": \"<string>\",\n        \"CredentialName\": \"<string>\",\n        \"CredentialDescription\": \"<string>\",\n        \"MemberNumber\": \"<string>\",\n        \"MemberSince\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/onboard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"onboard"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
								},
								{
									"name": "bad input parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"memberId\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"displayTextFromFI\": \"<string>\",\n    \"credentialData\": {\n        \"CredentialId\": \"<string>\",\n        \"Institution\": \"<string>\",\n        \"CredentialName\": \"<string>\",\n        \"CredentialDescription\": \"<string>\",\n        \"MemberNumber\": \"<string>\",\n        \"MemberSince\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/onboard",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"onboard"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "create Invitation JSON for use",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member/:memberId/createInvitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId",
										"createInvitation"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "Member (identitified by memberID) that we are onboarding."
										}
									]
								},
								"description": "generates invitation JSON for use - by URL, to generate a QR code, via NFC, etc."
							},
							"response": [
								{
									"name": "JSON for invitation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Prefer",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/member/<string>/createInvitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"createInvitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"invitationUrl\": \"<string>\",\n \"invitationJSON TODO\": \"schema type not provided\",\n \"TODOmoreParams\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "send an Anti-Fraud message to Member for response.",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/member/:memberId/SendAntiFraudPrompt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member",
										":memberId",
										"SendAntiFraudPrompt"
									],
									"variable": [
										{
											"key": "memberId",
											"value": "<string>",
											"description": "Member (identitified by memberID) that will receive the prompt."
										}
									]
								}
							},
							"response": [
								{
									"name": "JSON results of message.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/SendAntiFraudPrompt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"SendAntiFraudPrompt"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"messageId\": \"<string>\",\n \"MOREHERE\": \"<string>\",\n \"simpleResponse\": \"<string>\",\n \"messagePrompt\": {\n  \"messageId\": \"<string>\",\n  \"messageQuestion\": \"<string>\",\n  \"positiveOptionText\": \"<string>\",\n  \"negativeOptionText\": \"<string>\",\n  \"messageText\": \"<string>\",\n  \"expires\": \"<dateTime>\"\n },\n \"signedResponse\": \"<string>\"\n}"
								},
								{
									"name": "bad input parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/SendAntiFraudPrompt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"SendAntiFraudPrompt"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Call was made Asynchronously. This is the result of posting the job for processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageId\": \"<string>\",\n    \"messageQuestion\": \"<string>\",\n    \"positiveOptionText\": \"<string>\",\n    \"negativeOptionText\": \"<string>\",\n    \"messageText\": \"<string>\",\n    \"expires\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/member/<string>/SendAntiFraudPrompt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"member",
												"<string>",
												"SendAntiFraudPrompt"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Provides basic information about the health of the system.",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/heartbeat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"heartbeat"
					]
				},
				"description": "Provides information about the system (e.g. time of system checks, subsystem states).\n\nv0.2.0 provides a simple OK/notOK indication. Future versions will provide more information.\n"
			},
			"response": [
				{
					"name": "System State (JSON)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/heartbeat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"heartbeat"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"status\": \"<string>\",\n \"details\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "summary",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/version",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"version"
					]
				},
				"description": "desc"
			},
			"response": [
				{
					"name": "System State (JSON)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"main\": {\n  \"name\": \"<string>\",\n  \"version\": \"<string>\"\n }\n}"
				}
			]
		},
		{
			"name": "Provides job state and job results for asynchronous jobs.",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/poll/:jobId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"poll",
						":jobId"
					],
					"variable": [
						{
							"key": "jobId",
							"value": "<string>",
							"description": "The jobID that was returned from a polling-based call  (Onboard or Authenticate).\n"
						}
					]
				},
				"description": "Checks job status, providing result, if available in .jobResult."
			},
			"response": [
				{
					"name": "no result yet",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/poll/<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"poll",
								"<string>"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
				},
				{
					"name": "Job Data if completed without Error, Error otherwise. \n\nJob results will be kept available for ____ minutes.\n",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/poll/<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"poll",
								"<string>"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"jobId\": \"<string>\",\n \"active\": \"<boolean>\",\n \"updated_at\": \"<dateTime>\",\n \"created_at\": \"<dateTime>\",\n \"completed_at\": \"<dateTime>\",\n \"jobURL\": \"<string>\",\n \"jobType\": \"<string>\",\n \"jobResult\": {\n  \"code\": \"<integer>\",\n  \"message\": \"<string>\"\n }\n}"
				},
				{
					"name": "job not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/poll/<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"poll",
								"<string>"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://app.swaggerhub.com/apis-docs/CULedger/CULedger.Identity/0.3.0",
			"type": "string"
		}
	]
}